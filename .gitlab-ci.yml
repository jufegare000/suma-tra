# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:10.19.0

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
cache:
  paths:
  - node_modules/

#test:
#  stage: test
 # script:
  #  - echo "test"
   # - npm run test

stages:
  - dependencies
  - test
  - build
  - deploy

dependencies:
  stage: dependencies
  script:
  - echo "installing npm dependencies"
  - npm install
  #- npm -v
  #- echo "installing Mocha tests"
  #- npm install --save-dev mocha 

test:
  stage: test
  script: npm run test


deploy_staging:
  type: deploy
  stage: deploy

  
  before_script:
    # Setup SSH deploy key
    - apt-get update && apt-get install -y
    #- 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    #- eval $(ssh-agent -s)
    #- mkdir -p ~/.ssh
    #- chmod 700 ~/.ssh
    - echo "$envfile" > "$(pwd)/.env"
    #- chmod 400 "$(pwd)/key.pem"
    #- echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    #- apt-get update -y
    #- apt-get -y install node-typescript
    #- apt-get -y install rsync
    #- npm install --global typescript@latest
    #- npm install chai mocha ts-node @types/chai @types/mocha --save-dev


  environment:
    name: prod
    url: <(echo "$SERVER_IP")
  script:
    - echo "Deploying to prod"

  only:
    - main
